plugins {
    id 'java'
    id "com.github.spacialcircumstances.gradle-cucumber-reporting" version "0.1.25"
    id 'jacoco'
    id("org.sonarqube") version "4.4.1.3373"
    id 'maven-publish'
    id "io.github.oleksiiparf.slack-webhook" version "1.0.0"
}

group = 'com.example'
version = '1.0'

repositories {
    mavenCentral()
}
dependencies {
    testImplementation 'io.cucumber:cucumber-java:6.0.0'
    testImplementation 'io.cucumber:cucumber-junit:6.0.0'
    testImplementation 'junit:junit:4.13.1'
}
cucumberReports {
    outputDir = file('build/reports/cucumber/html')
    buildId = '0'
    reports = files('reports/example-report.json')
}



test {
    finalizedBy jacocoTestReport, 'sonar'
    // report is always generated after tests run
}
jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
}


sonar {
    properties {
        property "sonar.projectKey", "APIGradle"
        property "sonar.projectName", "APIGradle"
        property "sonar.host.url", "http://localhost:9000"
        property "sonar.sources", "src/main/java/com/example"
        property "sonar.java.binaries", "."
        property "sonar.scm.disabled", "true"
        property "sonar.gradle.skipCompile", "true"
    }
}
project.tasks["sonar"].dependsOn "test"

javadoc {
    title = "Project Documentation"
    source = sourceSets.main.allJava
}

task generateMatrixAPI {
    def testReportsDir = "${buildDir}/reports/tests/test/"
    def javadocDir = "${buildDir}/docs/javadoc/"
    def jarFile = "${buildDir}/libs/"

    def destinationDir = "MatrixRelease/Matrix_v_1.0"

    dependsOn 'build', 'javadoc'

    doLast {
        file(destinationDir).mkdirs()

        copy {
            from testReportsDir
            into "${destinationDir}/TestReports"
        }
        copy {
            from javadocDir
            into "${destinationDir}/Documentation"
        }
        copy {
            from jarFile
            include '*.jar'
            into destinationDir
        }
    }
    finalizedBy publish
}



apply plugin: 'maven-publish'

group = 'com.example'
version = '5.4-R'

publishing {
    repositories {
        maven {
            url 'https://mymavenrepo.com/repo/cEmjfkxugPlzLxXg1A2B'
            credentials {
                username 'myMavenRepo'
                password 'test0005'
            }
        }
    }

    publications {
        maven(MavenPublication) {
            from components.java
        }
    }
}


slack {
    publishSucceed {
        webHook = "https://hooks.slack.com/services/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"
        attachment {
            fallback = "Project successfully published."
            pretext = "Project successfully published."
            color = "good"
            field {
                title = "Module"
                value = project.name
                shortValue = true
            }
            field {
                title = "Version"
                value = project.version
                shortValue = true
            }
        }
    }
}

publish {
    finalizedBy "postPublishSucceedToSlack"
}